@model Application.DTOs.Password.ChangePasswordRequestDTO

@{
    ViewData["Title"] = "Change Password";
}

<partial name="_Notification"/>

<div class="container">
    <div class="col-12 d-flex align-items-center justify-content-center">
        <div class="border border-3 border-secondary rounded-2">
            <div class="card bg-white shadow-lg">
                <div class="card-body p-5">
                    <form class="mb-1 mt-md-4" role="form" autocomplete="off" asp-controller="Home" asp-action="ChangePassword">
                        <h2 class="fw-bold mb-2">Change Password</h2>
                        <p class=" mb-4">Please enter your current and new password.</p>
                        <div class="mb-3">
                            <label class="form-label required">Current Password</label>
                            <input type="password" class="form-control" id="CurrentPassword" required="required" asp-for="CurrentPassword">
                        </div>
                        <div class="mb-3">
                            <label class="form-label required">New Password</label>
                            <input type="password" class="form-control" id="NewPassword" required="required" asp-for="NewPassword">
                            <span class="form-text small text-muted">
                                The password must be 8-20 characters, and must <em>not</em> contain spaces.
                            </span>
                        </div>
                        <div class="mb-3">
                            <label class="form-label required">Confirm Password</label>
                            <input type="password" class="form-control" id="ConfirmNewPassword" required="required" asp-for="ConfirmNewPassword">
                            <span class="form-text small text-muted">
                                To confirm, type the new password again.
                            </span>
                        </div>
                        <div class="row">
                            <input asp-for="HdCurrentPassword" class="form-control ps-5" id="HdCurrentPassword" type="hidden" />
                            <input asp-for="HdNewPassword" class="form-control ps-5" id="HdNewPassword" type="hidden" />
                            <input asp-for="HdConfirmNewPassword" class="form-control ps-5" id="HdConfirmNewPassword" type="hidden" />
                        </div>
                        <div class="mt-4 d-grid">
                            <button class="btn text-white" style="background-color: #DB4B73" type="submit" id="changePassword">Submit</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
     toastr.options = {
        "closeButton": true
    };
 
    document.addEventListener("DOMContentLoaded", function () {
        let changePasswordButton = document.getElementById('changePassword');
        changePasswordButton.addEventListener('click', function (event) {
            let txtCurrentPassword = $('#CurrentPassword').val();
            let txtNewPassword = $('#NewPassword').val();
            let txtConfirmPassword = $('#ConfirmNewPassword').val();
            
            if (txtNewPassword !== txtConfirmPassword){
                toastr.warning("The new password and the confirmed password do not match.");
                event.preventDefault();
                return;
            }
            
            if (txtCurrentPassword === txtNewPassword){
                toastr.warning("Your current password should not match with the new password.");
                event.preventDefault();
                return;
            }
            
            $('#CurrentPassword').val('');
            $('#NewPassword').val('');
            $('#ConfirmNewPassword').val('');
            
            $('#HdCurrentPassword').val('');
            $('#HdNewPassword').val('');
            $('#HdConfirmNewPassword').val('');
            
            let key = CryptoJS.enc.Utf8.parse('8080808080808080');
            let iv = CryptoJS.enc.Utf8.parse('8080808080808080');
            
            let encryptedCurrentPassword = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(txtCurrentPassword), key,
            {
                keySize: 128 / 8,
                iv: iv,
                mode: CryptoJS.mode.CBC,
                padding: CryptoJS.pad.Pkcs7
            });
            
            $('#HdCurrentPassword').val(encryptedCurrentPassword);
            $('#CurrentPassword').val("********************");
            
            let encryptedNewPassword = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(txtNewPassword), key,
            {
                keySize: 128 / 8,
                iv: iv,
                mode: CryptoJS.mode.CBC,
                padding: CryptoJS.pad.Pkcs7
            });
            
            $('#HdNewPassword').val(encryptedNewPassword);
            $('#NewPassword').val("********************");
            
            let encryptedConfirmPassword = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(txtConfirmPassword), key,
            {
                keySize: 128 / 8,
                iv: iv,
                mode: CryptoJS.mode.CBC,
                padding: CryptoJS.pad.Pkcs7
            });
            
            $('#HdConfirmNewPassword').val(encryptedConfirmPassword);
            $('#ConfirmNewPassword').val("********************");
        });
    });
</script>